services:
  db:
    image: dojot/postgres:9.5.21-alpine
    container_name: kong_postgres_db
    restart: always
    environment:
      POSTGRES_DB: kong
      POSTGRES_USER: kong
      POSTGRES_PASSWORD: kong
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "kong"]
      interval: 10s
      timeout: 5s
      retries: 5
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - internal_network

  kong-migrations:
    image: kong:3.8
    container_name: kong-migrations
    depends_on:
      - db
    environment:
      KONG_DATABASE: postgres
      KONG_PG_HOST: db
      KONG_PG_USER: kong
      KONG_PG_PASSWORD: kong
    command: kong migrations bootstrap
    restart: on-failure
    networks:
      - internal_network

  kong:
    image: kong:3.8
    container_name: kong
    restart: always
    depends_on:
      - kong-migrations
    environment:
      KONG_ADMIN_ACCESS_LOG: /dev/stdout
      KONG_ADMIN_ERROR_LOG: /dev/stderr
      KONG_ADMIN_LISTEN: '0.0.0.0:8001'
      KONG_CASSANDRA_CONTACT_POINTS: postgres
      KONG_DATABASE: postgres
      KONG_PG_HOST: db
      KONG_PG_USER: kong
      KONG_PG_DATABASE: kong
      KONG_PG_PASSWORD: kong
      KONG_PROXY_ACCESS_LOG: /dev/stdout
      KONG_PROXY_ERROR_LOG: /dev/stderr
      KONG_LOG_LEVEL: info
    ports:
      - "8000:8000/tcp"           #api
      - "8443:8443/tcp"           #api-https
      - "127.0.0.1:8001:8001/tcp" #api-adm-http
      - "127.0.0.1:8444:8444/tcp" #api-adm-https
    healthcheck:
      test: ["CMD", "kong", "health"]
      interval: 10s
      timeout: 10s
      retries: 10
    networks:
      - internal_network

  konga_prepare:
    image: pantsel/konga:latest
    entrypoint: ["node", "/app/bin/konga.js", "prepare", "--adapter", "postgres", "--uri", "postgres://kong:kong@db:5432/konga"]
    restart: on-failure
    networks:
      - internal_network
    depends_on:
      - db

  konga:
    image: pantsel/konga
    container_name: konga
    restart: always
    environment:
      TOKEN_SECRET: "your_secret_token"
      BASE_URL: /konga/
      HOST: 0.0.0.0
      DB_ADAPTER: postgres
      DB_HOST: db
      DB_PORT: 5432
      DB_USER: kong
      DB_PASSWORD: kong
      DB_DATABASE: konga
      DB_PG_SCHEMA: public
      KONGA_LOG_LEVEL: debug
      NODE_ENV: development
    ports:
      - "1337:1337"
    networks:
      - internal_network
    depends_on:
      - konga_prepare

  haproxy:
    image: haproxy:alpine
    container_name: haproxy
    volumes:
      - ./haproxy.cfg:/usr/local/etc/haproxy/haproxy.cfg:ro
    ports:
      - "80:80"
    networks:
      - internal_network
    depends_on:
      - konga
      - kong
  
networks:
  internal_network:
    name: internal_network
    driver: bridge
  
volumes:
  postgres_data:
